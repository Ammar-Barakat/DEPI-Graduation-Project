@using BLLProject.Specification
@model ActiveSubstanceViewModel
@inject IUnitOfWork unitOfWork

@{
	ViewData["Title"] = "Edit Active Substance";

	// Fetch the Active Substances that can be used in the dropdown, excluding the ones already in interactions
	var spec = new BaseSpecification<ActiveSubstance>(a => !Model.Interactions.Select(i => i.ActSubId).Contains(a.Id));
	var ActiveSubstancesDataReader = unitOfWork.Repository<ActiveSubstance>().GetALLWithSpec(spec).ToList();
	
	var Medspec = new BaseSpecification<Medication>(a => !Model.Medications.Select(i => i.Id).Contains(a.Id));
	var MedicationsDateReader = unitOfWork.Repository<Medication>().GetALLWithSpec(Medspec).ToList();



}

<div class="container mt-5" style="min-height: 100vh">
	<!-- Error Message -->
	<partial name="ErrorMessage" />
	<h1 class="page-title">Edit Active Substance</h1>

	<!-- Main form for editing the active substance and its interactions -->
	<form id="editForm" asp-action="Edit" method="post">
		<!-- Active Substance Name -->
		<div>
			<label asp-for="ActiveSubstancesName" class="form-label"></label>
			<input asp-for="ActiveSubstancesName" class="form-control" />
			<span asp-validation-for="ActiveSubstancesName" class="text-danger"></span>
		</div>

		<!-- Add new Medications (optional) -->
		<div class="mt-3">
			<label asp-for="MedicationId" class="form-label">Add new Medications (optional):</label>
			<select asp-for="MedicationId" class="form-control select2-multiple">
				@foreach (var medication in MedicationsDateReader)
				{
					<option value="@medication.Id">@medication.MedName</option>
				}
			</select>
		</div>

		<!-- Interactions with Other Substances -->
		<div class="mt-3">
			<h6 class="mb-3">Interactions with Other Active Substances</h6>
			<div>
				<div id="interactions-list" class="row gy-3">
					@for (int i = 0; i < Model.Interactions.Count; i++)
					{
						<div class="interaction-item col-md-12 row align-items-end mb-3 mt-3" id="Interaction_@Model.Interactions[i].ActSubId">
							<!-- Substance Selector -->
							<div class="col-md-6">
								<label class="form-label">Substance</label>
								<select name="Interactions[@i].ActSubId" class="form-control" required>
									<option value="">Select Substance</option>
									@foreach (var substance in ActiveSubstancesDataReader)
									{
										<option value="@substance.Id" >
											@substance.ActiveSubstancesName
										</option>
									}
								</select>
							</div>

							<!-- Interaction Input -->
							<div class="col-md-4">
								<label class="fw-bold">Interaction</label>
								<input type="text" name="Interactions[@i].Interaction" value="@Model.Interactions[i].Interaction" class="form-control" placeholder="Enter interaction" required />
							</div>

							<!-- Delete Button with Modal Confirmation -->
							<div class="col-md-2 d-flex align-items-center">
								<button type="button" class="btn btn-danger delete-interaction" data-interaction-id="@Model.Interactions[i].ActSubId">
									<i class="fas fa-trash-alt"></i> Delete
								</button>
							</div>
						</div>
					}
				</div>

				<!-- Add New Interaction Button -->
				<button type="button" class="btn btn-success mt-3" id="add-interaction">
					<i class="fas fa-plus-circle"></i> Add Interaction
				</button>
			</div>
		</div>

		<!-- Submit Button -->
		<div class="mt-3 d-flex justify-content-between">
			<button type="submit" class="btn btn-primary">
				<i class="fas fa-edit"></i> Save Changes
			</button>
			<a asp-controller="ActiveSubstance" asp-action="Index" class="btn btn-secondary ms-2">
				<i class="fas fa-arrow-left"></i> Back To List
			</a>
		</div>
	</form>
</div>


@section Scripts {
    <script>
        // Automatically hide the error message after 5 seconds (5000 milliseconds)
        $(document).ready(function () {
            setTimeout(function () {
                $('#errorMessage').fadeOut('slow');
            }, 5000); // 5000 ms = 5 seconds
        });
    </script>
	@await Html.PartialAsync("_ValidationScriptsPartial")
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script src="~/select2/js/select2.min.js"></script>
	<link href="~/select2/css/select2.min.css" rel="stylesheet" />

	<script>
		$(document).ready(function () {
			// Initialize Select2 for Medication field
			$('.select2-multiple').select2({
				placeholder: "Select from the list",
				allowClear: true,
				width: '100%'
			});

			// Add new Interaction Row
			$('#add-interaction').click(function () {
				var index = $('.interaction-item').length;
				var newInteraction = `
					<div class="interaction-item col-md-12 row align-items-end mb-3 mt-3">
						<div class="col-md-6">
							<label class="form-label">Substance</label>
							<select name="Interactions[` + index + `].ActSubId" class="form-control" required>
								<option value="">Select Substance</option>
								@foreach (var substance in ActiveSubstancesDataReader)
								{
									<option value="@substance.Id">@substance.ActiveSubstancesName</option>
								}
							</select>
						</div>
						<div class="col-md-4">
							<input type="text" name="Interactions[` + index + `].Interaction" class="form-control" placeholder="Enter interaction" required />
						</div>
						<div class="col-md-2 d-flex align-items-center">
							<button type="button" class="btn btn-danger remove-interaction">
								<i class="fas fa-trash-alt"></i>
							</button>
						</div>
					</div>
				`;
				$('#interactions-list').append(newInteraction).hide().fadeIn(300); // Smooth animation
			});

			// Remove Interaction Row
			$(document).on('click', '.remove-interaction', function () {
				$(this).closest('.interaction-item').fadeOut(300, function () {
					$(this).remove(); // Smooth removal
				});
			});

			// Delete existing active substance
			$(document).on('click', '.delete-interaction', function (e) {
				e.preventDefault(); // Prevent form submission

				// Get Interaction ID from button's data attributes
				var interactionId = $(this).data('interaction-id');

				// Make an AJAX call to delete the interaction
				$.ajax({
					url: '@Url.Action("ActSubstDelete", "ActiveSubstance")',
					type: 'POST',
					data: { ActId: @Model.Id, InteractId: interactionId }, // Send ActId and InteractId
					success: function (result) {
						if (result.success) {
							// Remove the interaction from the UI on success
							$(`#Interaction_${interactionId}`).fadeOut(300, function () {
								$(this).remove();
							});
						} else {
							alert(result.message);
						}
					},
					error: function (error) {
						alert("Error removing interaction. Please try again.");
					}
				});
			});
		});
	</script>
}
