@model DoctorViewModel
@inject IUnitOfWork unitOfWork;
@{
	var SpecializationsDateReader = unitOfWork.Repository<DoctorSpecializationLookup>().GetALL().ToList();
	ViewData["Title"] = "Create Doctor";
}
<div class="container mt-5">
	<!-- Error Message -->
	<partial name="ErrorMessage" />
	<h2>Create Doctor</h2>

	<form asp-action="Create" method="post">

		<partial name="userpartialviews\_UserCreatePartial" />

		<!-- Specializations Dropdown (Required, Single Selection) -->
		<div class="form-group mt-2">
			<label asp-for="specializationId"></label>
			<select asp-for="specializationId" class="form-control" required>
				<option value="">Select Specialization</option>
				@foreach (var specialization in SpecializationsDateReader)
				{
					<option value="@specialization.Id">@specialization.Specialization</option>
				}
			</select>
			<span asp-validation-for="specialization" class="text-danger"></span>
		</div>

		<!-- Submit Button -->
		<button type="submit" class="btn btn-primary mt-2">Submit</button>
	</form>
</div>
<!-- Scripts for Validation -->
@section Scripts {
	<script>
		// Automatically hide the error message after 5 seconds (5000 milliseconds)
		$(document).ready(function () {
			setTimeout(function () {
				$('#errorMessage').fadeOut('slow');
			}, 5000); // 5000 ms = 5 seconds
		});
	</script>
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}
