@model IPagedList<PLProject.ViewModels.MedicationViewModel>

@{
	ViewData["Title"] = "Medications";
}

<div class="container mt-5">
	<!-- Success Message -->
	<partial name="SuccessMessage" />
	<div class="row">
		<div class="col-md-12">
			<h1 class="mb-4">@ViewData["Title"]</h1>

			<div class="row">
				<div class="col-sm">
					<a asp-controller="Medication" asp-action="Create" class="btn btn-primary">Create New Medication</a>
				</div>
				<!-- Search Form -->
				<div class="col-sm">
					<form asp-controller="Medication" asp-action="Index" method="get" class="mb-3">
						<div class="input-group">
							<input type="text" name="searchQuery" value="@ViewData["CurrentFilter"]" placeholder="Search by Name" class="form-control" />
							<button type="submit" class="btn btn-primary">Search</button>
						</div>
					</form>
				</div>
			</div>

			@if (Model.Any())
			{
				<div class="table-responsive">
					<table class="table table-striped table-hover align-middle">
						<thead class="table-dark">
							<tr>
								<th>@Html.DisplayNameFor(m => m.FirstOrDefault().Name)</th>
								<th>@Html.DisplayNameFor(m => m.FirstOrDefault().Strength)</th>
								<th>Details</th>
								<th>Edit</th>
								<th>Delete</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var medication in Model)
							{
								<tr>
									<td>@medication.Name</td>
									<td>@medication.Strength</td>
									<td>
										<a asp-action="Details" asp-route-id="@medication.Id" class="btn btn-info">Details</a>
									</td>
									<td>
										<a asp-action="Edit" asp-route-id="@medication.Id" class="btn btn-warning">Edit</a>
									</td>
									<td>
										<a asp-action="Delete" asp-route-id="@medication.Id" class="btn btn-danger">Delete</a>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>

				<!-- Pagination Controls -->
				<div class="d-flex justify-content-center mt-4">
					<nav aria-label="Page navigation">
						<ul class="pagination">
							@if (Model.HasPreviousPage)
							{
								<li class="page-item">
									<a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1, searchQuery = ViewData["CurrentFilter"] })" aria-label="Previous">
										<span aria-hidden="true">&laquo;</span>
									</a>
								</li>
							}
							else
							{
								<li class="page-item disabled">
									<span class="page-link" aria-hidden="true">&laquo;</span>
								</li>
							}

							@for (int i = 1; i <= Model.PageCount; i++)
							{
								if (i == Model.PageNumber)
								{
									<li class="page-item active" aria-current="page">
										<span class="page-link">@i</span>
									</li>
								}
								else
								{
									<li class="page-item">
										<a class="page-link" href="@Url.Action("Index", new { page = i, searchQuery = ViewData["CurrentFilter"] })">@i</a>
									</li>
								}
							}

							@if (Model.HasNextPage)
							{
								<li class="page-item">
									<a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1, searchQuery = ViewData["CurrentFilter"] })" aria-label="Next">
										<span aria-hidden="true">&raquo;</span>
									</a>
								</li>
							}
							else
							{
								<li class="page-item disabled">
									<span class="page-link" aria-hidden="true">&raquo;</span>
								</li>
							}
						</ul>
					</nav>
				</div>
			}
			else if (@ViewData["CurrentFilter"] is not null)
			{
				<div class="mt-4 alert alert-warning text-center">
					<h3><i class="fas fa-exclamation-triangle"></i> No Medications Found</h3>
				</div>
			}
			else
			{
				<div class="mt-4 alert alert-warning text-center">
					<h3><i class="fas fa-exclamation-triangle"></i> No Medications Found</h3>
					<p>You can add new medications by clicking the button below.</p>
					<a asp-controller="Medication" asp-action="Create" class="btn btn-primary">
						<i class="fas fa-plus-circle"></i> Add New Medication
					</a>
				</div>
			}
		</div>
	</div>
</div>
@section Scripts {
	<script>
		// Automatically hide the success message after 5 seconds (5000 milliseconds)
		$(document).ready(function () {
			setTimeout(function () {
				$('#SuccessMessage').fadeOut('slow');
			}, 5000); // 5000 ms = 5 seconds
		});
	</script>
}