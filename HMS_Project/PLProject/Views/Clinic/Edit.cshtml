@model ClinicViewModel

@inject IUnitOfWork unitOfWork
@{
    var Specializations = unitOfWork.Repository<ClinicSpecializationLookup>().GetALL();

    var DoctorSpec = new BaseSpecification<Doctor>(d => !Model.Doctors.Select(d => d.Id).Contains(d.Id));
    DoctorSpec.Includes.Add(d => d.Clinic);
    var HMSDoctors = unitOfWork.Repository<Doctor>().GetALLWithSpec(DoctorSpec);

    var NurseSpec = new BaseSpecification<Nurse>(d => !Model.Nurses.Select(d => d.Id).Contains(d.Id));
    NurseSpec.Includes.Add(n => n.Clinic);
    var HMSNures = unitOfWork.Repository<Nurse>().GetALLWithSpec(NurseSpec);

    ViewData["Title"] = "Edit Clinic";
}

<div class="container mt-5" style="min-height: 200vh">
    <!-- Error Message -->
    <partial name="ErrorMessage" />
    <h1 class="page-title">Edit Clinic Information</h1>

    <form asp-controller="Clinic" asp-action="Edit" method="post">
        <!-- Clinic Information Section -->
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-info text-white">
                <h4>Clinic Information</h4>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label asp-for="Name" class="form-label">Clinic Name</label>
                    <input asp-for="Name" class="form-control" placeholder="Enter clinic name" required />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <!-- Specializations Dropdown (Required, Single Selection) -->
                <div class="mb-3">
                    <label asp-for="Specialization" class="form-label">Specialization</label>
                    <select asp-for="Specialization" class="form-control select2-single" required>
                        <option value="">Select Specialization</option>
                        @foreach (var specialization in Specializations)
                        {
                            <option value="@specialization.Specialization">@specialization.Specialization</option>
                        }
                    </select>
                    <span asp-validation-for="Specialization" class="text-danger"></span>
                </div>
            </div>
        </div>

        <!-- Clinic Staff Section -->
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-secondary text-white">
                <h4>Clinic Staff</h4>
            </div>
            <div class="card-body">
                <!-- Doctors Dropdown -->
                <div class="mb-3">
                    <label asp-for="Doctors" class="form-label">Assign Doctors</label>
                    <select asp-for="DoctorsAddedId" class="form-control select2-multiple" multiple="multiple">
                        <option value="">Select Doctor</option>
                        @foreach (var doctor in HMSDoctors)
                        {
                            <option value="@doctor.Id">@doctor.AppUser.FullName @("Has clinic :" + doctor?.Clinic?.Name ?? "No Clinic")</option>
                        }
                    </select>
                    <small class="text-muted">You can assign multiple doctors to the clinic.</small>
                    <span asp-validation-for="Doctors" class="text-danger"></span>
                </div>

                <!-- Assigned Doctors Card -->
                <div class="card mb-4">
                    <div class="card-header bg-success text-white d-flex justify-content-between">
                        <span>Assigned Doctors</span>
                    </div>
                    <div class="card-body">
                        @if (Model.Doctors != null && Model.Doctors.Any())
                        {
                            <ul class="list-group" id="doctorList">
                                @foreach (var doctor in Model.Doctors)
                                {
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        <div>
                                            <strong>@doctor.AppUser.FullName</strong> - @(doctor.Clinic?.Name ?? "No Clinic Assigned")
                                        </div>
                                        <button class="btn btn-danger btn-sm" onclick="removeDoctor('@doctor.Id')">
                                            <i class="fas fa-trash"></i> Remove
                                        </button>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p class="text-muted">No doctors assigned to this clinic.</p>
                        }
                    </div>
                </div>

                <!-- Nurses Dropdown -->
                <div class="mb-3">
                    <label asp-for="Nurses" class="form-label">Assign Nurses</label>
                    <select asp-for="NursesAddedId" class="form-control select2-multiple" multiple="multiple">
                        <option value="">Select Nurse</option>
                        @foreach (var Nure in HMSNures)
                        {
                            <option value="@Nure.Id">@Nure.AppUser.FullName @("Has clinic :" + Nure?.Clinic?.Name ?? "No Clinic")</option>
                        }
                    </select>
                    <small class="text-muted">You can assign multiple nurses to the clinic.</small>
                    <span asp-validation-for="Nurses" class="text-danger"></span>
                </div>

                <!-- Assigned Nurses Card -->
                    <div class="card mb-4">
                        <div class="card-header bg-info text-white d-flex justify-content-between">
                            <span>Assigned Nurses</span>
                        </div>
                        <div class="card-body">
                            @if (Model.Nurses != null && Model.Nurses.Any())
                            {
                                <ul class="list-group" id="nurseList">
                                    @foreach (var nurse in Model.Nurses)
                                    {
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            <div>
                                                <strong>@nurse.AppUser.FullName</strong> - @(nurse.Clinic?.Name ?? "No Clinic Assigned")
                                            </div>
                                            <button class="btn btn-danger btn-sm" onclick="removeNurse('@nurse.Id')">
                                                <i class="fas fa-trash"></i> Remove
                                            </button>
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p class="text-muted">No nurses assigned to this clinic.</p>
                            }
                        </div>
                    </div>
            </div>
        </div>

        <!-- Contact and Pricing Section -->
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-primary text-white">
                <h4>Contact & Pricing</h4>
            </div>
            <div class="card-body">
                <!-- Phone -->
                <div class="mb-3">
                    <label asp-for="Phone" class="form-label">Phone Number</label>
                    <input asp-for="Phone" class="form-control" placeholder="Enter phone number" required />
                    <span asp-validation-for="Phone" class="text-danger"></span>
                </div>

                <!-- Price -->
                <div class="mb-3">
                    <label asp-for="Price" class="form-label">Consultation Price</label>
                    <input asp-for="Price" class="form-control" placeholder="Enter price" required />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>
            </div>
        </div>

        <!-- Submit Button -->
        <div class="d-flex justify-content-between">
            <button type="submit" class="btn btn-success">
                <i class="fas fa-save"></i> Save Changes
            </button>
            <a asp-action="Index" class="btn btn-secondary"><i class="fas fa-arrow-left"></i> Back to List</a>
        </div>
    </form>
</div>


@section Scripts {
    <script>
        // Automatically hide the error message after 5 seconds (5000 milliseconds)
        $(document).ready(function () {
            setTimeout(function () {
                $('#errorMessage').fadeOut('slow');
            }, 5000); // 5000 ms = 5 seconds
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/select2/js/select2.min.js"></script>
    <link href="~/select2/css/select2.min.css" rel="stylesheet" />

    <script>
         $(document).ready(function () {
          // Initialize Select2 for single and multiple dropdowns
           $('.select2-multiple').select2({
                placeholder: "Select from the list",
                allowClear: true,
                width: '100%'
            });
            $('.select2-single').select2({
                placeholder: "Select Specialization",
                width: '100%'
            });
        });

        // Remove doctor via AJAX
        function removeDoctor(doctorId) {
            if (confirm('Are you sure you want to remove this doctor?')) {
                $.ajax({
                    url: '/Clinic/RemoveDoctor',
                    type: 'POST',
                    data: { doctorId: doctorId, clinicId: '@Model.Id' },
                    success: function (response) {
                        // Remove doctor from UI
                        $('#doctorList').find('li:has(button[onclick="removeDoctor(\'' + doctorId + '\')"])').remove();
                    },
                    error: function () {
                        alert('Error removing doctor.');
                    }
                });
            }
        }

        // Remove nurse via AJAX
        function removeNurse(nurseId) {
            if (confirm('Are you sure you want to remove this nurse?')) {
                $.ajax({
                    url: '/Clinic/RemoveNurse',
                    type: 'POST',
                    data: { nurseId: nurseId, clinicId: '@Model.Id' },
                    success: function (response) {
                        // Remove nurse from UI
                        $('#nurseList').find('li:has(button[onclick="removeNurse(\'' + nurseId + '\')"])').remove();
                    },
                    error: function () {
                        alert('Error removing nurse.');
                    }
                });
            }
        }
    </script>
}
